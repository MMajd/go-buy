package com.mmajd.gobuy.admin.utils;

import com.lowagie.text.Document;
import com.lowagie.text.PageSize;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import lombok.extern.slf4j.Slf4j;
import org.supercsv.io.CsvBeanWriter;
import org.supercsv.io.ICsvBeanWriter;
import org.supercsv.prefs.CsvPreference;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.function.Consumer;

import static com.lowagie.text.FontFactory.HELVETICA_BOLD;
import static com.lowagie.text.FontFactory.getFont;

@Slf4j
public class MediaExportUtil {
    private static String getFilename(String prefix, String ext) {
        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
        String timestamp = formatter.format(new Date());
        return (prefix != null ? prefix + "_" + timestamp : timestamp) + ext;
    }


    public static void exportCSV(HttpServletResponse response,
                                 String prefix,
                                 Consumer<? super ICsvBeanWriter> consumer) throws IOException {

        String filename = getFilename(prefix, ".csv");
        response.setContentType("text/csv");
        response.setHeader("Content-Disposition", "attachment; filename=" + filename);

        ICsvBeanWriter csvWriter = new CsvBeanWriter(response.getWriter(), CsvPreference.STANDARD_PREFERENCE);
        consumer.accept(csvWriter);
        csvWriter.close();
    }

    public static void exportPDF(HttpServletResponse response, String prefix, Consumer<? super Document> consumer) throws IOException {
        String filename = getFilename(prefix, ".pdf");
        response.setContentType("application/pdf");

        Document doc = new Document(PageSize.A4);
        PdfWriter.getInstance(doc, response.getOutputStream());
        doc.open();
        doc.addAuthor("Generated By GoBuy System");
        doc.addCreator("GoBuy System");
        doc.addCreationDate();
        consumer.accept(doc);
        doc.close();
    }

    public static void writeHeaderCellToPDF(PdfPTable table, String data) {
        PdfPCell cell = new PdfPCell();
        cell.setPadding(5);
        cell.setPhrase(new Phrase(data, getFont(HELVETICA_BOLD)));
        table.addCell(cell);
    }

    public static void writeDataCellToPDF(PdfPTable table, String data) {
        PdfPCell cell = new PdfPCell();
        cell.setPadding(5);
        cell.setPhrase(new Phrase(data));
        table.addCell(cell);
    }
}
